Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/jose/Escritorio/CERVECERIIIIA/CerveceriaAllende/src/components/principal/Carrito.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _nativeBase = require('native-base');

var _reactNativeRouterFlux = require('react-native-router-flux');

var _ListaCompra = require('./ListaCompra');

var _cliente = require('../../assets/imgs/cliente.jpg');

var _cliente2 = _interopRequireDefault(_cliente);

var _reactRedux = require('react-redux');

var _orderActions = require('../../actions/orderActions');

var _Firebase = require('../../components/firebase/Firebase');

var _Firebase2 = _interopRequireDefault(_Firebase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    Carrito: {
        displayName: 'Carrito'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/home/jose/Escritorio/CERVECERIIIIA/CerveceriaAllende/src/components/principal/Carrito.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

var clientes = [{ name: 'Selecciona un cliente' }, { name: 'Jose' }, { name: 'Miguel' }, { name: 'Brenda' }, { name: 'Oswaldo' }, { name: 'Hector' }, { name: 'Sául' }];

var Carrito = _wrapComponent('Carrito')(function (_Component) {
    _inherits(Carrito, _Component);

    function Carrito() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, Carrito);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Carrito.__proto__ || Object.getPrototypeOf(Carrito)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
            order: {
                total: 0,
                products: [],
                user: '',
                cliente: ''
            },
            cliente: ''
        }, _this.sendOrder = function () {
            var cliente = _this.state.cliente;
            var fecha = new Date();
            var user = _Firebase2.default.auth().currentUser;
            var email = void 0;
            if (user !== null) {
                email = user.email;
                _reactNativeRouterFlux.Actions.Principal();
            } else {
                email = 'NO USER';
            }
            fecha = fecha.getTime();
            var order = _this.state.order;

            order.total = _this.getTotal();
            order.products = _this.props.cart;
            order.date = fecha;
            order.user = email;
            order.cliente = cliente;
            console.log(_this.state.order);
            _this.props.saveOrder(order).then(function (snap) {
                return _nativeBase.Toast.show({
                    text: 'Orden exitosa',
                    position: 'bottom',
                    buttonText: 'Ok'
                });
            }).catch(function (error) {}, _nativeBase.Toast.show({
                text: 'Algo falló',
                position: 'bottom',
                buttonText: 'Ok'
            }));
        }, _this.getTotal = function () {
            var total = 0;
            for (var _iterator = _this.props.cart, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator']();;) {
                var _ref2;

                if (_isArray) {
                    if (_i >= _iterator.length) break;
                    _ref2 = _iterator[_i++];
                } else {
                    _i = _iterator.next();
                    if (_i.done) break;
                    _ref2 = _i.value;
                }

                var t = _ref2;

                var subtotal = t.product.price * t.amount;
                total += subtotal;
            }
            return total;
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Carrito, [{
        key: 'onValueChange',
        value: function onValueChange(value) {
            this.setState({
                cliente: value
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var total = this.getTotal();
            return _react3.default.createElement(
                _nativeBase.Container,
                { style: styles.fondo, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 82
                    }
                },
                _react3.default.createElement(
                    _nativeBase.ListItem,
                    { avatar: true, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 84
                        }
                    },
                    _react3.default.createElement(
                        _nativeBase.Left,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 85
                            }
                        },
                        _react3.default.createElement(_nativeBase.Thumbnail, { source: _cliente2.default, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 86
                            }
                        })
                    ),
                    _react3.default.createElement(
                        _nativeBase.Body,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 88
                            }
                        },
                        _react3.default.createElement(
                            _nativeBase.CardItem,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 89
                                }
                            },
                            _react3.default.createElement(
                                _reactNative.Picker,
                                {
                                    style: styles.picker,
                                    selectedValue: this.state.cliente,
                                    onValueChange: this.onValueChange.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 90
                                    }
                                },
                                clientes.map(function (p, index) {
                                    return _react3.default.createElement(_reactNative.Picker.Item, { key: index, label: p.name, value: p.name, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 95
                                        }
                                    });
                                })
                            )
                        )
                    )
                ),
                _react3.default.createElement(
                    _reactNative.ScrollView,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 103
                        }
                    },
                    this.props.cart.map(function (item, index) {
                        console.log(item);
                        return _react3.default.createElement(_ListaCompra.ListaCompra, {
                            item: item,
                            addAmount: _this2.props.addAmount,
                            substractAmount: _this2.props.substractAmount,
                            deleteItem: _this2.props.deleteItem,
                            key: index,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 106
                            }
                        });
                    })
                ),
                _react3.default.createElement(
                    _reactNative.View,
                    { style: styles.card, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 116
                        }
                    },
                    _react3.default.createElement(
                        _nativeBase.CardItem,
                        { style: styles.cardItem, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 117
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.Text,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 118
                                }
                            },
                            'Total a Pagar'
                        ),
                        _react3.default.createElement(
                            _reactNative.Text,
                            { style: styles.pago, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 119
                                }
                            },
                            '$ ',
                            total
                        )
                    ),
                    _react3.default.createElement(
                        _nativeBase.Button,
                        { block: true, style: styles.boton, onPress: this.sendOrder, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 122
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.Text,
                            { style: styles.text, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 123
                                }
                            },
                            'Enviar Orden'
                        )
                    )
                )
            );
        }
    }]);

    return Carrito;
}(_react2.Component));

var mapStateToProps = function mapStateToProps(state) {
    return { cart: state.cart };
};

var styles = _reactNative.StyleSheet.create({
    text: {
        color: "orange",
        fontWeight: 'bold',
        fontSize: 20
    },
    text1: {
        color: 'black',
        fontWeight: 'bold'
    },
    total: {
        color: 'black',
        marginLeft: 10,
        fontWeight: 'bold'
    },
    totalP: {
        marginLeft: 15
    },
    boton: {
        backgroundColor: 'white',
        width: '100%',
        borderColor: "orange",
        borderWidth: 2
    },
    list: {
        backgroundColor: 'white'
    },
    cardItem: {
        alignSelf: 'center',
        flexDirection: 'column'
    },
    pago: {
        fontSize: 20
    },
    card: {
        flexDirection: 'column',
        justifyContent: 'center'
    },
    fondo: {
        backgroundColor: 'white'
    },
    picker: {
        flex: 1
    }
});

exports.default = Carrito = (0, _reactRedux.connect)(mapStateToProps, { addToCart: _orderActions.addToCart, addAmount: _orderActions.addAmount, substractAmount: _orderActions.substractAmount, deleteItem: _orderActions.deleteItem, saveOrder: _orderActions.saveOrder })(Carrito);